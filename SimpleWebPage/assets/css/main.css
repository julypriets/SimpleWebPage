html{
  font-family: 'Nunito', sans-serif;
}

a{
  text-decoration: none;
  color: #cc414a;
}

/*se agregan los dos puntos para decir "cuando al objecto tal:esté en tal estado"*/
a:hover{
  opacity:0.8;
}

.img{
  max-width: 100%;
}
.title{
  text-transform: uppercase;
  text-align: center;
}
.container{
  background: #12c2e9;  /* fallback for old browsers */
  background: -webkit-linear-gradient(to right, #f64f59, #c471ed, #12c2e9);  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #f64f59, #c471ed, #12c2e9); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  /* Las unidades del vh son respecto a toda la pantalla, a diferencia de los %, pues ocupan ese porcentaje
  dentro de lo que están contenidos.
  vh -> ALTO
  vw -> ANCHO */
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.content{
  max-width: 960px;
  width: 100%;
  height: 80vh;
  background-color: white;
  /*box-shadow: diferenciaHorizontal diferenciaVertical desenfoque amplitud color; */
  /*aquí ignoramos la amplitud, si quitamos uno quitamos el desenfoque, y el resto son obligatorios.*/
  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
  border-radius: 4px;
  /*lo ponemos (aunque no lo vayamos a mover) para que sea un elemento posicionado para que así
  el botón lo podamos colocar como absolute y mejor dicho, que los elementos puedan estar ubicados
  respecto a content y no al resto de la pantalla. */
  position:relative;
  overflow: scroll;
}
.content{
  height:500px;
}

/*Vamos a romper la tabla en pantallas pequeñas*/
td{
  display:block;
  width:100%;
}
/*para poner pseudo-clases se ponen dos puntos*/
td:nth-of-type(1){
  font-size: 1.5em;
  font-weight: bold;
  color:#642B73;
}
th{
  display: none;

}

.actions{
  position: absolute;
  top:1em;
  right:1em;
}

.close{
  height: 40px;
  width: 40px;
  color:white;
  border-radius: 50%;
  background-color: #f64f59;
  display:inline-block;
  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
  cursor: pointer;
  display:flex;
  align-items: center;
  justify-content: center;
}

.paragraph{
  line-height: 1.8em;
  font-weight: 300;
}

.table{
  width:100%;
  border-spacing: 0;
}

.table td, .table th{
  padding: 1em;
  text-align: left;
}

/*Pseudo clase que selecciona a los "hijos" impares de la clase referida*/
.table tr:nth-child(even){
  background-color: #f2c4c7;

}

.fa-star{
  color: #fca50f;
}

.title-item{
  /*border-bottom-style: solid;
  border-width: 2px;
  border-color: #C6426E;*/
  /*short-hand properties: poder poner varias propiedades en una sola linea.
  parecido a "flex-flow" para agrupar flex-directon y align-content (si no estoy mal).*/
  border-bottom:solid 2px #C6426E;
  padding-bottom:1em;
  /*padding: arriba, derecha, abajo, izquierda;
  padding: arriba/abajo, derecha, izquierda; */
  font-size: 2em;
  text-transform: uppercase;
}

.position{
  background-color:#C6426E;
  color:white;
  /*un solo valor para todos los lados */
  padding: 0.5em;
  border-radius: 4px;
  margin-right: 0.5em;
}

.address{
  font-weight: bold;
  color: #642B73;
  font-size: 1.2em;
  margin-top: 2em;
  display: inline-block;
}

.main-image{
  float:left;
  margin-right:1em;
  height:250px;
}

/*media query: busca propiedades de pantallas*/
@media (min-width:900px){
  th{
    display: table-cell;
  }
  td{
    width: auto;
    display: table-cell;
  }
  td:nth-last-of-type(1){
    font-size: 1em;
  }
  .content{
    padding:1.8em;
  }
}
@media(max-width:600px){
  .content{
    padding:1em;
  }
}
